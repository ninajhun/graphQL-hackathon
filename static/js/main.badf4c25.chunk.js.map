{"version":3,"sources":["components/header/header.js","queries/getCoffeeShops.js","components/widgets/CoffeeWidget.js","components/widgets/RickAndMortyWidget.js","queries/getWeather.js","components/widgets/weather.js","components/widgets/quotes.js","queries/getLocation.js","components/widgets/MapsWidget.js","views/dashboard/Dashboard.js","views/landing-page/LandingPage.js","App.js","index.js"],"names":["Header","className","GET_COFFEE_QUERY","gql","CoffeeWidget","props","ip","useQuery","variables","data","error","useState","coffeeShops","setCoffeeShops","useEffect","location","message","map","coffeeShop","index","href","url","target","rel","src","image_url","alt","name","fetchRickAndMorty","a","fetch","method","headers","body","JSON","stringify","query","then","res","json","characters","results","RickAndMortyWidget","rickAndAndMortyData","setRickAndMortyData","randomCharacter","setRandomCharacter","Math","floor","random","length","image","style","height","width","GET_WEATHER_QUERY","Weather","token","setToken","weather","temp","description","city","grabQuotes","Quotes","setData","max","quotesList","quote","GET_LOCATION_QUERY","MapsWidget","longitude","setLongitude","latitude","setLatitude","title","Dashboard","ipAddress","setIp","publicIp","v4","getIp","LandingPage","setView","color","onClick","xmlns","viewBox","d","App","view","process","REACT_APP_STEPZEN_API_KEY","REACT_APP_STEPZEN_URI","client","ApolloClient","cache","InMemoryCache","Authorization","uri","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.badf4c25.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./header.css\"\n\nexport default function Header() {\n  return (\n    <>\n      <nav className=\"navbar navbar-light bg-light\">\n        <div className=\"container-fluid\">\n          <span className=\"navbar-brand mb-0 h1 \">\n            <span className=\"emoji mx-3\" >&#128021;</span>\n            The Pointless Dashboard</span>\n        </div>\n      </nav>\n    </>\n  );\n}\n","import { gql } from \"graphql-tag\";\n\nexport const GET_COFFEE_QUERY = gql`\n  query getCoffee($ip: String!) {\n    location(ip: $ip) {\n      coffeeShops {\n        image_url\n        name\n        url\n      }\n    }\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport \"./widgets.css\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_COFFEE_QUERY } from \"../../queries/getCoffeeShops.js\";\n\nexport default function CoffeeWidget(props) {\n  const { ip } = props;\n  const { data, error } = useQuery(GET_COFFEE_QUERY, {\n    variables: { ip },\n  });\n\n  const [coffeeShops, setCoffeeShops] = useState(null);\n\n  useEffect(() => {\n    if (data) {\n      setCoffeeShops(data.location.coffeeShops);\n    }\n  }, [data]);\n\n  if (error) return <p>{error.message}</p>;\n\n  return (\n    <>\n      <div className=\"card col-lg-6 col-md-6 col-sm-12 m-2\">\n        <div className=\"card-body text-start\">\n          <h6 className=\"card-title mt-5\">\n            Feeling sleepy? I got you covered.{\" \"}\n            <span className=\"emoji\">&#9749;</span>\n          </h6>\n          <div className=\"card-text\">\n            <div className=\"container \">\n              {!coffeeShops ? (\n                <p> Roasting your coffee beans still... </p>\n              ) : (\n                <div>\n                  <p className=\"mb-4\">Yelp found these coffee shops nearby:</p>\n                  <div className=\"d-flex align-items-start justify-content-center \">\n                    {coffeeShops.map((coffeeShop, index) => (\n                      <div key={index} className=\"col-4\">\n                        <a\n                          href={coffeeShop.url}\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                        >\n                          <img\n                            src={coffeeShop.image_url}\n                            className=\"thumbnail\"\n                            alt=\"...\"\n                          ></img>\n                        </a>\n                        <p className=\"mt-2\">{coffeeShop.name}</p>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./widgets.css\";\n\nconst fetchRickAndMorty = async () => {\n  const data = await fetch(\"https://rickandmortyapi.com/graphql\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `\n        query getCharacters {\n          characters {\n            results {\n              name\n              image\n            }\n          }\n        }\n      `,\n    }),\n  })\n    .then((res) => res.json())\n    .then((data) => data.data.characters.results);\n\n  return data;\n};\n\nexport default function RickAndMortyWidget() {\n  const [rickAndAndMortyData, setRickAndMortyData] = useState();\n  const [randomCharacter, setRandomCharacter] = useState();\n\n  useEffect(() => {\n    const data = fetchRickAndMorty();\n    data.then((data) => {\n      setRickAndMortyData(data);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (rickAndAndMortyData) {\n      setRandomCharacter(\n        rickAndAndMortyData[\n          Math.floor(Math.random() * rickAndAndMortyData.length)\n        ]\n      );\n    }\n  }, [rickAndAndMortyData]);\n\n  return (\n    <>\n      <div className=\"card col-lg-4 col-md-4 col-sm-12 m-2\">\n        <div className=\"card-body text-start \">\n          <h6 className=\"card-title mt-5\">\n            Here's a random Rick and Morty character for the sake of it{\" \"}\n            <span className=\"emoji\">&#128125;</span>\n          </h6>\n          <div className=\"card-text d-flex align-items-center justify-content-center flex-column\">\n            {randomCharacter ? (\n              <>\n                <img\n                  className=\"img-thumbnail\"\n                  src={randomCharacter.image}\n                  alt=\"...\"\n                  style={{ height: \"200px\", width: \"200px\" }}\n                />\n                <p>{randomCharacter.name}</p>\n              </>\n            ) : (\n              <p>Searching the Galaxy for alien lifeforms...</p>\n            )}\n\n            <div className=\"container\">{}</div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import { gql } from \"graphql-tag\";\n\nexport const GET_WEATHER_QUERY = gql`\n  query getWeather($ip: String!) {\n      location(ip: $ip) {\n        city\n        weather {\n          temp\n          description\n        }\n      }\n    }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport \"./widgets.css\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_WEATHER_QUERY } from \"../../queries/getWeather.js\";\n\nexport default function Weather(props) {\n  const { ip } = props;\n  const { data, error } = useQuery(GET_WEATHER_QUERY, {\n    variables: { ip },\n  });\n  const [token, setToken] = useState(null);\n\n  useEffect(() => {\n    if (data) {\n      setToken(data);\n    }\n  }, [data]);\n\n  if (error) return <p>{error.message}</p>;\n  return (\n    <>\n      <div className=\"card col-lg-4 col-md-4 col-sm-12 m-2\">\n        <div className=\"card-body text-start \">\n          <h6 className=\"card-title mt-5\">\n            So, how about that weather huh?\n            <span className=\"emoji\">&#127782;</span>\n          </h6>\n          <div className=\"card-text d-flex align-items-center justify-content-center flex-column\">\n            {!token ? (\n              <p>Checking with the weather man ...</p>\n            ) : (\n              <p className=\"text-center\">\n                The temperature is{\" \"}\n                {`${Math.floor((token.location.weather.temp * 9) / 5 + 32)}`}F\n                and is {token.location.weather.description} in{\" \"}\n                {token.location.city}!\n              </p>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./widgets.css\";\n\nconst grabQuotes = async () => {\n  const data = await fetch(\"https://facadeapi.com/randomquotes\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `\n        query MyQuery {\n        quotesList {\n          quote\n        }\n      }\n      `,\n    }),\n  })\n    .then((res) => res.json())\n    .then((data) => data);\n\n  return data;\n};\n\nexport default function Quotes() {\n  const [data, setData] = useState(\"\");\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n  }\n  useEffect(() => {\n    const data = grabQuotes();\n    data.then((data) => {\n      setData(data.data.quotesList[getRandomInt(342)].quote);\n    });\n  }, []);\n\n  return (\n    <>\n      <div className=\"card col-lg-6 col-md-6 col-sm-12 m-2 p-3\">\n        <div className=\"card-body text-start \">\n          <h6 className=\"card-title mt-5\">\n            Quote of the Day\n          </h6>\n          <p className=\"text-center\">{data}</p>\n        </div>\n      </div>\n    </>\n  )\n}\n","import { gql } from \"graphql-tag\";\n\nexport const GET_LOCATION_QUERY = gql`\n  query MyQuery($ip: String!) {\n  location(ip: $ip) {\n    latitude\n    longitude\n  }\n}\n\n`;\n","import React, { useState, useEffect } from \"react\";\nimport \"./widgets.css\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_LOCATION_QUERY } from \"../../queries/getLocation\";\n\nexport default function MapsWidget(props) {\n  const { ip } = props;\n  const { data, error } = useQuery(GET_LOCATION_QUERY, {\n    variables: { ip },\n  });\n\n  const [longitude, setLongitude] = useState(null);\n  const [latitude, setLatitude] = useState(null);\n\n  useEffect(() => {\n    if (data) {\n      setLongitude(data.location.longitude);\n      setLatitude(data.location.latitude);\n    }\n  }, [data]);\n\n  if (error) return <p>{error.message}</p>;\n\n  return (\n    <>\n      <div className=\"card col-lg-10 col-md-10 col-sm-12 my-2 \" >\n        <div className=\"card-body text-start\">\n          <h6 className=\"card-title \">\n            I see you...\n         </h6>\n\n          <iframe\n            title=\"map\"\n            style={{\n              width: \"100%\",\n              height: \"90%\",\n            }}\n            src={`https://www.google.com/maps/embed/v1/place?key=AIzaSyDGH75fWG7ixeoQpr3Jhz3BoIL8TVOE3gQ\n                &q=${latitude},${longitude}`}\n          ></iframe>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"../../components/header/header\";\nimport CoffeeWidget from \"../../components/widgets/CoffeeWidget\";\nimport RickAndMortyWidget from \"../../components/widgets/RickAndMortyWidget\";\nimport publicIp from \"public-ip\";\nimport Weather from '../../components/widgets/weather'\nimport Quotes from '../../components/widgets/quotes';\nimport MapsWidget from '../../components/widgets/MapsWidget';\n\nexport default function Dashboard() {\n  const [ipAddress, setIp] = useState(\"\");\n\n  useEffect(() => {\n    async function getIp() {\n      let ip = await publicIp.v4();\n      if (ip.length === 0) ip = \"86.181.200.161\";\n      setIp(ip);\n    }\n\n    getIp();\n  }, []);\n\n  //YOU CAN PASS ip AS PROPS NOW!!!!!\n\n  return (\n    <>\n      <Header />\n      <div className=\"container-fluid mt-5 d-flex justify-content-center flex-wrap\">\n        {/* PLACE WIDGETS HERE */}\n        <CoffeeWidget ip={ipAddress} />\n        <RickAndMortyWidget />\n        <Weather ip={ipAddress}/>\n        <Quotes/>\n        <MapsWidget ip={ipAddress}/>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport \"./landing-page.css\";\n\nexport default function LandingPage(props) {\n  const { setView } = props;\n  function changeView() {\n    setView(\"dashBoard\");\n  }\n\n  return (\n    <>\n      <div className=\"container-fluid p-5\">\n        <h3 className=\"mt-5\">Welcome to The Pointless Dashboard!</h3>\n        <h1 className=\"emoji-large mb-4\">&#128640; &#128021; &#128640; </h1>\n        <h6>The last dashboard you'll NEVER need...</h6>\n        <h6 className=\"mb-5\">(unless you're feeling bored)</h6>\n      </div>\n\n      <div className=\"container-fluid p-5\" style={{ color: \"red\" }}>\n        <h2 onClick={changeView} className=\"click-app\">\n          <span>\n            <img src=\"/img/arrow.png\" className=\"icon-landing\" alt=\"...\"></img>\n          </span>{\" \"}\n          Click here to check it out!\n        </h2>\n      </div>\n\n      <div className=\"container-fluid p-5\">\n        <h6 className=\"p-5\">Created by...</h6>\n        <div className=\"d-flex justify-content-center flex-wrap \">\n          <div className=\"col-lg-3 col-md-3 col-sm-12 mb-5\">\n            <img\n              src=\"/img/nina.jpg\"\n              className=\"thumbnail-landing\"\n              alt=\"...\"\n            ></img>\n            <h6 className=\"mt-1\">Nina</h6>\n            <a\n              href=\"https://github.com/ninajhun\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"45\"\n                height=\"45\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path d=\"M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm2.218 18.616c-.354.069-.468-.149-.468-.336v-1.921c0-.653-.229-1.079-.481-1.296 1.56-.173 3.198-.765 3.198-3.454 0-.765-.273-1.389-.721-1.879.072-.177.312-.889-.069-1.853 0 0-.587-.188-1.923.717-.561-.154-1.159-.231-1.754-.234-.595.003-1.193.08-1.753.235-1.337-.905-1.925-.717-1.925-.717-.379.964-.14 1.676-.067 1.852-.448.49-.722 1.114-.722 1.879 0 2.682 1.634 3.282 3.189 3.459-.2.175-.381.483-.444.936-.4.179-1.413.488-2.037-.582 0 0-.37-.672-1.073-.722 0 0-.683-.009-.048.426 0 0 .46.215.777 1.024 0 0 .405 1.25 2.353.826v1.303c0 .185-.113.402-.462.337-2.782-.925-4.788-3.549-4.788-6.641 0-3.867 3.135-7 7-7s7 3.133 7 7c0 3.091-2.003 5.715-4.782 6.641z\" />\n              </svg>\n            </a>\n            <span> </span>\n\n            <a\n              href=\"https://www.linkedin.com/in/ninajhunjhnuwala/\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"42\"\n                height=\"42\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path d=\"M0 0v24h24v-24h-24zm8 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.397-2.586 7-2.777 7 2.476v6.759z\" />\n              </svg>\n            </a>\n          </div>\n\n          <div className=\"col-lg-3 col-md-3 col-sm-12 mb-5\">\n            <img\n              src=\"/img/jerry.jpeg\"\n              className=\"thumbnail-landing\"\n              alt=\"...\"\n            ></img>\n            <h6 className=\"mt-1\">Jerry</h6>\n            <a\n              href=\"https://github.com/jerryong89\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"45\"\n                height=\"45\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path d=\"M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm2.218 18.616c-.354.069-.468-.149-.468-.336v-1.921c0-.653-.229-1.079-.481-1.296 1.56-.173 3.198-.765 3.198-3.454 0-.765-.273-1.389-.721-1.879.072-.177.312-.889-.069-1.853 0 0-.587-.188-1.923.717-.561-.154-1.159-.231-1.754-.234-.595.003-1.193.08-1.753.235-1.337-.905-1.925-.717-1.925-.717-.379.964-.14 1.676-.067 1.852-.448.49-.722 1.114-.722 1.879 0 2.682 1.634 3.282 3.189 3.459-.2.175-.381.483-.444.936-.4.179-1.413.488-2.037-.582 0 0-.37-.672-1.073-.722 0 0-.683-.009-.048.426 0 0 .46.215.777 1.024 0 0 .405 1.25 2.353.826v1.303c0 .185-.113.402-.462.337-2.782-.925-4.788-3.549-4.788-6.641 0-3.867 3.135-7 7-7s7 3.133 7 7c0 3.091-2.003 5.715-4.782 6.641z\" />\n              </svg>\n            </a>\n            <span> </span>\n\n            <a\n              href=\"https://www.linkedin.com/in/jerryong89/\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"42\"\n                height=\"42\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path d=\"M0 0v24h24v-24h-24zm8 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.397-2.586 7-2.777 7 2.476v6.759z\" />\n              </svg>\n            </a>\n          </div>\n\n          <div className=\"col-lg-3 col-md-3 col-sm-12 mb-5\">\n            <img\n              src=\"/img/chris.jpeg\"\n              className=\"thumbnail-landing\"\n              alt=\"...\"\n            ></img>\n            <h6 className=\"mt-1\">Chris</h6>\n            <a\n              href=\"https://github.com/ChrisGitmed\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"45\"\n                height=\"45\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path d=\"M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm2.218 18.616c-.354.069-.468-.149-.468-.336v-1.921c0-.653-.229-1.079-.481-1.296 1.56-.173 3.198-.765 3.198-3.454 0-.765-.273-1.389-.721-1.879.072-.177.312-.889-.069-1.853 0 0-.587-.188-1.923.717-.561-.154-1.159-.231-1.754-.234-.595.003-1.193.08-1.753.235-1.337-.905-1.925-.717-1.925-.717-.379.964-.14 1.676-.067 1.852-.448.49-.722 1.114-.722 1.879 0 2.682 1.634 3.282 3.189 3.459-.2.175-.381.483-.444.936-.4.179-1.413.488-2.037-.582 0 0-.37-.672-1.073-.722 0 0-.683-.009-.048.426 0 0 .46.215.777 1.024 0 0 .405 1.25 2.353.826v1.303c0 .185-.113.402-.462.337-2.782-.925-4.788-3.549-4.788-6.641 0-3.867 3.135-7 7-7s7 3.133 7 7c0 3.091-2.003 5.715-4.782 6.641z\" />\n              </svg>\n            </a>\n            <span> </span>\n\n            <a\n              href=\"https://www.linkedin.com/in/christopher-gitmed/\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"42\"\n                height=\"42\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path d=\"M0 0v24h24v-24h-24zm8 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.397-2.586 7-2.777 7 2.476v6.759z\" />\n              </svg>\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container-fluid p-5 d-flex justify-content-around align-items-center flex-wrap\">\n        <div className=\"col-lg-7  col-md-7 col-sm-12\">\n          <img\n            className=\"img-landing img-thumbnail\"\n            src=\"/img/preview.png\"\n            alt=\"...\"\n          ></img>\n        </div>\n        <div className=\"col-lg-4 col-md-7 col-sm-12 ml-3\">\n          <h3>About the The Pointless Dashboard App!</h3>\n          <p className=\"text-start\">\n            This application was created for the MintBean GraphQL hackathon\n            (feat. the amazing team @ StepZen!). We thought the best way to\n            learn GraphQL was to just make as many API queries as possible so we\n            could practice! The result is this pointless dashboard that is well,\n            pointless... but if you're wondering where your next cup of coffee\n            is coming from or what's the weather is like in your area, we got\n            you!\n          </p>\n          <p className=\"text-start\">\n            <strong>The nitty gritty:</strong> React.js and Bootstrap 4 was used\n            to create the front-end. StepZen converts our REST API endpoints\n            into GraphQL endpoints then we used GraphQL to query our APIs and\n            fetch the data necessary to populate our widgets.\n          </p>\n        </div>\n      </div>\n\n      <div className=\"container-fluid p-5\">\n        <h3>Technologies Used</h3>\n        <li>React.js</li>\n        <li>GraphQL</li>\n        <li>StepZen</li>\n        <li>BootStrap 4</li>\n        <li>CSS</li>\n      </div>\n\n      <div className=\"container-fluid p-5 d-flex align-items-end\">\n        <div className=\"col-1\">\n          {\" \"}\n          <span className=\"emoji-landing\"> &#128588;</span>\n        </div>\n\n        <div className=\"col-10\">\n          <h5 style={{ color: \"red\" }}>\n            Thank you to{\" \"}\n            <a href=\"https://mintbean.io/\" target=\"_blank\" rel=\"noreferrer\">\n              MintBean\n            </a>{\" \"}\n            and{\" \"}\n            <a href=\"https://stepzen.com/\" target=\"_blank\" rel=\"noreferrer\">\n              StepZen\n            </a>{\" \"}\n            for hosting the hackathon that inspired this project!\n          </h5>\n        </div>\n        <div className=\"col-1\">\n          <span className=\"emoji-landing\"> &#128588;</span>\n        </div>\n      </div>\n    </>\n  );\n}\n","// import HelloWorld from './HelloWorld';\nimport \"./App.css\";\nimport Dashboard from \"./views/dashboard/Dashboard\";\nimport LandingPage from \"./views/landing-page/LandingPage\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [view, setView] = useState(\"landingPage\");\n\n  if (view === \"landingPage\") {\n    return (\n      <div className=\"App\">\n        <LandingPage setView={setView} />\n      </div>\n    );\n  }\n\n  if (view === \"dashBoard\") {\n    return (\n      <div className=\"App\">\n        <Dashboard />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nconst { REACT_APP_STEPZEN_API_KEY, REACT_APP_STEPZEN_URI } = process.env;\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  headers: {\n    Authorization: `Apikey ${REACT_APP_STEPZEN_API_KEY}`,\n  },\n  uri: REACT_APP_STEPZEN_URI\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}